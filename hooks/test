#!/bin/bash

set -e

CONTAINER=grr_container
MAX_START_WAIT_SECS=300

# grep doesn't work in Docker-cloud: https://cloud.docker.com/swarm/demonchild2112/repository/registry-1.docker.io/demonchild2112/grr/builds/c2acb3e6-097c-49b0-8e29-a1597779bf4b
function wait_for_container_to_start() {
  echo "Waiting for container to start.."
  poll_start=$(date +%s)
  while true; do
    ready_msg="$(docker logs ${CONTAINER} 2>&1 | perl -wln -e 'print if /\bAdmin UI gui is at\b/')"
    if [[ ! -z "${ready_msg}" ]]; then
      break
    fi
    secs_elapsed=$(( $(date +%s) - $poll_start ))
    if [[ $secs_elapsed -gt $MAX_START_WAIT_SECS ]]; then
      echo "Error: Container has not started after ${MAX_START_WAIT_SECS} seconds."
      exit 1
    fi
    echo 'Container is not ready. Sleeping for 5 seconds..'
    sleep 5
  done
  echo "Container is ready."
}

function start_container() {
  echo "Starting container.."

  # Run demo container in background and send its logs to the systemd journal.
  docker run -d \
      --env EXTERNAL_HOSTNAME=localhost \
      --env ADMIN_PASSWORD=demo \
      --publish 0.0.0.0:8000:8000 \
      --publish 0.0.0.0:8080:8080 \
      --log-driver=journald \
      --name "${CONTAINER}" \
      demonchild2112/grr
}

start_container

wait_for_container_to_start

docker cp docker/fake-systemctl.sh $CONTAINER:/bin/systemctl

docker exec $CONTAINER dpkg -i "$(ls /usr/share/grr-server/executables/installers/grr_*_amd64.deb)"

echo "Waiting for server to connect to client."

sleep 20

echo "Fetching client id."

docker exec "${CONTAINER}" /usr/share/grr-server/bin/grr_console --code_to_execute "print(client_index.CreateClientIndex().LookupClients([]))"

#docker exec $CONTAINER sed -i 's/exit 101/exit 0/g' /usr/sbin/policy-rc.d

#docker cp grr_container:/usr/share/grr-server/executables/installers/grr_3.2.0.0_amd64.deb .

#dpkg -i grr_3.2.0.0_amd64.deb

#service grr status

#sleep 20

#docker logs "${CONTAINER}" 1>container.log 2>&1

#cat container.log

#apt install -y wget

#docker ps -a

#wget ${DOCKER_IP}:8080/server.pem

#cat server.pem

#docker exec "${CONTAINER}" /usr/share/grr-server/bin/grr_console --code_to_execute "print(client_index.CreateClientIndex().LookupClients([]))"
