#!/bin/bash

set -e
set -x

CONTAINER=grr_container
MAX_START_WAIT_SECS=300

function wait_for_container_to_start() {
  echo "Waiting for container to start.."
  poll_start=$(date +%s)
  while true; do
    ready_msg="$(docker logs ${CONTAINER} 2>&1 | grep 'Admin UI gui is at http://localhost:8000')"
    if [[ ! -z "${ready_msg}" ]]; then
      break
    fi
    secs_elapsed=$(( $(date +%s) - $poll_start ))
    if [[ $secs_elapsed -gt $MAX_START_WAIT_SECS ]]; then
      echo "Error: Container has not started after ${MAX_START_WAIT_SECS} seconds."
      exit 1
    fi
    echo 'Container is not ready. Sleeping for 5 seconds..'
    sleep 5
  done
  secs_elapsed=$(( $(date +%s) - $poll_start ))
  echo "Container started after ~ ${secs_elapsed} seconds."
}

function install_deps() {
  echo "Installing dependencies.."
  apt update && apt install -y \
      debhelper \
      default-jre \
      dpkg-dev \
      libffi-dev \
      libssl-dev \
      python-dev \
      python-pip \
      rpm \
      wget \
      zip
}

function start_container() {
  echo "Starting container.."

  # Run demo container in background and send its logs to the systemd journal.
  docker run -d \
      --env EXTERNAL_HOSTNAME="localhost" \
      --env ADMIN_PASSWORD="demo" \
      --publish 0.0.0.0:8000:8000 \
      --publish 0.0.0.0:8080:8080 \
      --log-driver=journald \
      --name "${CONTAINER}" \
      demonchild2112/grr
}

start_container

sleep 5

echo "Printing logs.."

docker logs "${CONTAINER}" 2>&1

sleep 5

docker logs "${CONTAINER}" 1> logs.txt

cat logs.txt

cat logs.txt | sed ''

cat logs.txt | grep 'Admin UI gui is at http://localhost:8000'

sleep 5

ready_msg="$(docker logs ${CONTAINER} 2>&1 | grep 'Admin UI gui is at http://localhost:8000')"

echo $ready_msg

wait_for_container_to_start

#docker cp grr_container:/usr/share/grr-server/executables/installers/grr_3.2.0.0_amd64.deb .

#dpkg -i grr_3.2.0.0_amd64.deb

#service grr status

#sleep 5

#docker logs grr_docker
