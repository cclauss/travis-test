branches:
  only:
    - master

platform:
  - x64

clone_folder: C:\grr_src

cache:
  #- '%LOCALAPPDATA%\pip\Cache -> **\install_for_build.bat'
  - C:\grr_deps\vagrant_1.9.7_x86_64.msi

install:
  - if %JOB%==template_builder C:\grr_src\vagrant\windows\install_for_build.bat
  - if %JOB%==template_builder nuget install secure-file -ExcludeVersion
  # See https://www.appveyor.com/docs/how-to/secure-files/
  - >-
    if %JOB%==template_builder
    secure-file\tools\secure-file
    -decrypt C:\grr_src\vagrant\windows\appveyor_uploader_service_account.json.enc
    -secret %GCS_ENCRYPTION_KEY%
  - if %JOB%==e2e_test powershell appveyor/install_vagrant.ps1

build_script:
  - >-
    if %JOB%==template_builder
    C:\Python27-x64\python.exe
    C:\grr_src\vagrant\windows\build_windows_templates.py
    --grr_src=C:\grr_src
    --output_dir=C:\grr_src\output
    --test_repack_install
  - if %JOB%==template_builder powershell C:\grr_src\vagrant\windows\deploy_to_gcs.ps1
  - if %JOB%==e2e_test set PATH=C:\Vagrant-1.9.7\HashiCorp\Vagrant\bin;C:\VirtualBox-5.1.26;%PATH%
  - if %JOB%==e2e_test vagrant up

artifacts:
  - path: output
    name: templates
    type: zip

# TODO(ogaro): Create a shared appveyor account, and use its encryption key.
environment:
  GCS_BUCKET: ogaro-travis-test
  GCS_ENCRYPTION_KEY:
    secure: V50YB9ZMPxsSwcmEPaD5qw==
  matrix:
    # - JOB: template_builder
    - JOB: e2e_test
