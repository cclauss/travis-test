image: ubuntu

environment:
  GRR_ADMIN_PASS: 'e2e_tests'

install:
- lsb_release -a
- sudo -H GRR_ADMIN_PASS="${GRR_ADMIN_PASS}" ./appveyor/linux/install_latest_server_deb.sh

# Appveyor will try to build any Visual Studio projects it finds if we do not disable this.
build: off

test_script:
- sudo -H GRR_ADMIN_PASS="${GRR_ADMIN_PASS}" ./appveyor/linux/run_e2e_tests.sh

# Make configs and log files available as artifacts after an Appveyor run.
# Artifact paths need to be relative to the root of the checked out repo.
after_test:
- mkdir server-configs server-logs client-configs client-logs
- sudo cp /usr/share/grr-server/install_data/etc/grr-server.yaml server-configs # Primary server config.
- sudo cp /etc/grr/server.local.yaml server-configs # Server writeback.
- sudo cp -r /usr/share/grr-server/lib/python2.7/site-packages/grr/var/log/ server-logs
- sudo cp /usr/lib/grr/grr_*_amd64/grrd.yaml client-configs # Primary client config.
- sudo cp /etc/grr.local.yaml client-configs # Secondary client config.
- sudo cp /var/log/GRRlog.txt client-logs
# Make artifacts readable by the non-root user so that they can be uploaded.
- sudo chown -R "$(whoami)" server-configs server-logs client-configs client-logs

artifacts:
- path: server-configs/*
  name: Server Configs
- path: server-logs/*
  name: Server Logs
- path: client-configs/*
  name: Client Configs
- path: client-logs/*
  name: Client Logs
